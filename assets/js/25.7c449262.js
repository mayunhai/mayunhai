(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{479:function(t,v,_){"use strict";_.r(v);var d=_(36),r=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),_("h2",{attrs:{id:"语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),_("table",[_("tbody",[_("tr",[_("th",{staticStyle:{width:"40px"}},[t._v("字符")]),t._v(" "),_("th",[t._v("描述")])]),t._v(" "),_("tr",[_("td",[t._v("\\cx")]),t._v(" "),_("td",[t._v("匹配由x指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 'c' 字符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\f")]),t._v(" "),_("td",[t._v("匹配一个换页符。等价于 \\x0c 和 \\cL。")])]),t._v(" "),_("tr",[_("td",[t._v("\\n")]),t._v(" "),_("td",[t._v("匹配一个换行符。等价于 \\x0a 和 \\cJ。")])]),t._v(" "),_("tr",[_("td",[t._v("\\r")]),t._v(" "),_("td",[t._v("匹配一个回车符。等价于 \\x0d 和 \\cM。")])]),t._v(" "),_("tr",[_("td",[t._v("\\s")]),t._v(" "),_("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。注意 Unicode 正则表达式会匹配全角空格符。")])]),t._v(" "),_("tr",[_("td",[t._v("\\S")]),t._v(" "),_("td",[t._v("匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。")])]),t._v(" "),_("tr",[_("td",[t._v("\\t")]),t._v(" "),_("td",[t._v("匹配一个制表符。等价于 \\x09 和 \\cI。")])]),t._v(" "),_("tr",[_("td",[t._v("\\v")]),t._v(" "),_("td",[t._v("匹配一个垂直制表符。等价于 \\x0b 和 \\cK。")])])])]),t._v(" "),_("h2",{attrs:{id:"修饰符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),_("table",[_("tbody",[_("tr",[_("th",{staticStyle:{width:"50px"}},[t._v("修饰符")]),t._v(" "),_("th",[t._v("含义")]),t._v(" "),_("th",[t._v("描述")])]),t._v(" "),_("tr",[_("td",[t._v("i")]),t._v(" "),_("td",[t._v("ignore - 不区分大小写")]),t._v(" "),_("td",[t._v("将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。")])]),t._v(" "),_("tr",[_("td",[t._v("g")]),t._v(" "),_("td",[t._v("global - 全局匹配 ")]),t._v(" "),_("td",[t._v("查找所有的匹配项。")])]),t._v(" "),_("tr",[_("td",[t._v("m")]),t._v(" "),_("td",[t._v("more - 多行匹配")]),t._v(" "),_("td",[t._v("使边界字符 `^` 和 `$` 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。")])]),t._v(" "),_("tr",[_("td",[t._v("s")]),t._v(" "),_("td",[t._v("特殊字符圆点 `.` 中包含换行符 `\\n`")]),t._v(" "),_("td",[t._v("默认情况下的圆点 `.` 是 匹配除换行符 `\\n` 之外的任何字符，加上 `s` 修饰符之后, `.` 中包含换行符 \\n。")])])])]),t._v(" "),_("h2",{attrs:{id:"元字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),_("table",[_("tr",[_("th",{staticStyle:{width:"100px"}},[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])]),t._v(" "),_("tr",[_("td",[t._v("\\")]),t._v(" "),_("td",[t._v('将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，\'n\' 匹配字符 "n"。\'\\n\' 匹配一个换行符。序列 \'\\\\\' 匹配 "\\" 而 "\\(" 则匹配 "("')])]),t._v(" "),_("tr",[_("td",[t._v("^")]),t._v(" "),_("td",[t._v("匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 '\\n' 或 '\\r' 之后的位置")])]),t._v(" "),_("tr",[_("td",[t._v("$")]),t._v(" "),_("td",[t._v("匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 '\\n' 或 '\\r' 之前的位置")])]),t._v(" "),_("tr",[_("td",[t._v("*")]),t._v(" "),_("td",[t._v('匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}')])]),t._v(" "),_("tr",[_("td",[t._v("+")]),t._v(" "),_("td",[t._v('匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}')])]),t._v(" "),_("tr",[_("td",[t._v("?")]),t._v(" "),_("td",[t._v('匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 。? 等价于 {0,1}')])]),t._v(" "),_("tr",[_("td",[t._v("{n}")]),t._v(" "),_("td",[t._v("n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 \"Bob\" 中的 'o'，但是能匹配 \"food\" 中的两个 o")])]),t._v(" "),_("tr",[_("td",[t._v("{n,}")]),t._v(" "),_("td",[t._v("n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 \"Bob\" 中的 'o'，但能匹配 \"foooood\" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'")])]),t._v(" "),_("tr",[_("td",[t._v("{n,m}")]),t._v(" "),_("td",[t._v("m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，\"o{1,3}\" 将匹配 \"fooooood\" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格")])]),t._v(" "),_("tr",[_("td",[t._v("?")]),t._v(" "),_("td",[t._v("当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 \"oooo\"，'o+?' 将匹配单个 \"o\"，而 'o+' 将匹配所有 'o'")])]),t._v(" "),_("tr",[_("td",[t._v(".")]),t._v(" "),_("td",[t._v("匹配除换行符（\\n、\\r）之外的任何单个字符。要匹配包括 '\\n' 在内的任何字符，请使用像\"(.|\\n)\"的模式")])]),t._v(" "),_("tr",[_("td",[t._v("(pattern)")]),t._v(" "),_("td",[t._v("匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 '\\(' 或 '\\)'")])]),t._v(" "),_("tr",[_("td",[t._v("(?:pattern)")]),t._v(" "),_("td",[t._v("匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 \"或\" 字符 (|) 来组合一个模式的各个部分是很有用。例如， 'industr(?:y|ies) 就是一个比 'industry|industries' 更简略的表达式")])]),t._v(" "),_("tr",[_("td",[t._v("(?=pattern)")]),t._v(" "),_("td",[t._v('正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，"Windows(?=95|98|NT|2000)"能匹配"Windows2000"中的"Windows"，但不能匹配"Windows3.1"中的"Windows"。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始')])]),t._v(" "),_("tr",[_("td",[t._v("(?!pattern)")]),t._v(" "),_("td",[t._v('正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如"Windows(?!95|98|NT|2000)"能匹配"Windows3.1"中的"Windows"，但不能匹配"Windows2000"中的"Windows"。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始')])]),t._v(" "),_("tr",[_("td",[t._v("(?<=pattern)")]),t._v(" "),_("td",[t._v('反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，"(?<=95|98|NT|2000)Windows"能匹配"2000Windows"中的"Windows"，但不能匹配"3.1Windows"中的"Windows"')])]),t._v(" "),_("tr",[_("td",[t._v("(?<!pattern)")]),t._v(" "),_("td",[t._v('反向否定预查，与正向否定预查类似，只是方向相反。例如"(?<!95|98|NT|2000)Windows"能匹配"3.1Windows"中的"Windows"，但不能匹配"2000Windows"中的"Windows"')])]),t._v(" "),_("tr",[_("td",[t._v("x|y")]),t._v(" "),_("td",[t._v('匹配 x 或 y。例如，\'z|food\' 能匹配 "z" 或 "food"。\'(z|f)ood\' 则匹配 "zood" 或 "food"')])]),t._v(" "),_("tr",[_("td",[t._v("[xyz]")]),t._v(" "),_("td",[t._v("字符集合。匹配所包含的任意一个字符。例如， '[abc]' 可以匹配 \"plain\" 中的 'a'")])]),t._v(" "),_("tr",[_("td",[t._v("[^xyz]")]),t._v(" "),_("td",[t._v("负值字符集合。匹配未包含的任意字符。例如， '[^abc]' 可以匹配 \"plain\" 中的'p'、'l'、'i'、'n'")])]),t._v(" "),_("tr",[_("td",[t._v("[a-z]")]),t._v(" "),_("td",[t._v("字符范围。匹配指定范围内的任意字符。例如，'[a-z]' 可以匹配 'a' 到 'z' 范围内的任意小写字母字符")])]),t._v(" "),_("tr",[_("td",[t._v("[^a-z]")]),t._v(" "),_("td",[t._v("负值字符范围。匹配任何不在指定范围内的任意字符。例如，'[^a-z]' 可以匹配任何不在 'a' 到 'z' 范围内的任意字符")])]),t._v(" "),_("tr",[_("td",[t._v("\\b")]),t._v(" "),_("td",[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如， 'er\\b' 可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er'")])]),t._v(" "),_("tr",[_("td",[t._v("\\B")]),t._v(" "),_("td",[t._v("匹配非单词边界。'er\\B' 能匹配 \"verb\" 中的 'er'，但不能匹配 \"never\" 中的 'er'")])]),t._v(" "),_("tr",[_("td",[t._v("\\cx")]),t._v(" "),_("td",[t._v("匹配由 x 指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 'c' 字符")])]),t._v(" "),_("tr",[_("td",[t._v("\\d")]),t._v(" "),_("td",[t._v("匹配一个数字字符。等价于 [0-9]")])]),t._v(" "),_("tr",[_("td",[t._v("\\D")]),t._v(" "),_("td",[t._v("匹配一个非数字字符。等价于 [^0-9]")])]),t._v(" "),_("tr",[_("td",[t._v("\\f")]),t._v(" "),_("td",[t._v("匹配一个换页符。等价于 \\x0c 和 \\cL")])]),t._v(" "),_("tr",[_("td",[t._v("\\n")]),t._v(" "),_("td",[t._v("匹配一个换行符。等价于 \\x0a 和 \\cJ")])]),t._v(" "),_("tr",[_("td",[t._v("\\r")]),t._v(" "),_("td",[t._v("匹配一个回车符。等价于 \\x0d 和 \\cM")])]),t._v(" "),_("tr",[_("td",[t._v("\\s")]),t._v(" "),_("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]")])]),t._v(" "),_("tr",[_("td",[t._v("\\S")]),t._v(" "),_("td",[t._v("匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]")])]),t._v(" "),_("tr",[_("td",[t._v("\\t")]),t._v(" "),_("td",[t._v("匹配一个制表符。等价于 \\x09 和 \\cI")])]),t._v(" "),_("tr",[_("td",[t._v("\\v")]),t._v(" "),_("td",[t._v("匹配一个垂直制表符。等价于 \\x0b 和 \\cK")])]),t._v(" "),_("tr",[_("td",[t._v("\\w")]),t._v(" "),_("td",[t._v("匹配字母、数字、下划线。等价于'[A-Za-z0-9_]'")])]),t._v(" "),_("tr",[_("td",[t._v("\\W")]),t._v(" "),_("td",[t._v("匹配非字母、数字、下划线。等价于 '[^A-Za-z0-9_]'")])]),t._v(" "),_("tr",[_("td",[t._v("\\xn")]),t._v(" "),_("td",[t._v("匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，'\\x41' 匹配 \"A\"。'\\x041' 则等价于 '\\x04' & \"1\"。正则表达式中可以使用 ASCII 编码")])]),t._v(" "),_("tr",[_("td",[t._v("\\n")]),t._v(" "),_("td",[t._v("标识一个八进制转义值或一个向后引用。如果 \\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值")])]),t._v(" "),_("tr",[_("td",[t._v("\\nm")]),t._v(" "),_("td",[t._v("标识一个八进制转义值或一个向后引用。如果 \\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \\nm 将匹配八进制转义值 nm")])]),t._v(" "),_("tr",[_("td",[t._v("\\nml")]),t._v(" "),_("td",[t._v("如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml")])]),t._v(" "),_("tr",[_("td",[t._v("\\un")]),t._v(" "),_("td",[t._v("匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \\u00A9 匹配版权符号 (?)")])])]),t._v(" "),_("h2",{attrs:{id:"运算符优先级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),_("p",[t._v("正则表达式从左到右进行计算，并遵循优先级顺序，这与算术表达式非常类似。\n相同优先级的从左到右进行运算，不同优先级的运算先高后低。下表从最高到最低说明了各种正则表达式运算符的优先级顺序：")]),t._v(" "),_("table",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])]),t._v(" "),_("tr",[_("td",{staticStyle:{width:"210px"}},[t._v("\\")]),t._v(" "),_("td",[t._v("转义符")])]),t._v(" "),_("tr",[_("td",[t._v("(), (?:), (?=), []")]),t._v(" "),_("td",[t._v("圆括号和方括号")])]),t._v(" "),_("tr",[_("td",[t._v("*, +, ?, {n}, {n,}, {n,m}")]),t._v(" "),_("td",[t._v("限定符")])]),t._v(" "),_("tr",[_("td",[t._v("^, $, \\任何元字符、任何字符")]),t._v(" "),_("td",[t._v("定位点和序列（即：位置和顺序）")])]),t._v(" "),_("tr",[_("td",[t._v("|")]),t._v(" "),_("td",[t._v('替换，"或"操作字符具有高于替换运算符的优先级，使得"m|food"匹配"m"或"food"。若要匹配"mood"或"food"，请使用括号创建子表达式，从而产生"(m|f)ood"')])])])])}),[],!1,null,null,null);v.default=r.exports}}]);